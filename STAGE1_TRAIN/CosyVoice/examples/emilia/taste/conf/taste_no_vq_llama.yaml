# set random seed, so that you may reproduce your result.
__set_seed1: !apply:random.seed [1986]
__set_seed2: !apply:numpy.random.seed [1986]
__set_seed3: !apply:torch.manual_seed [1986]
__set_seed4: !apply:torch.cuda.manual_seed_all [1986]

# fixed params
sample_rate: 22050
text_encoder_input_size: 512
llm_input_size: 1024
llm_output_size: 1024
spk_embed_dim: 192
## for audio branch
is_word_level: False
audio_embed_dim: 1280
audio_token_encoder_input_size: 512
# TODO: you should modify whisper_tokenizer_fpath for your own need
# TODO: change to llama tokenizer
whisper_tokenizer_fpath: /proj/MR_dataset/mtk53711/TASTE-SpokenLM/STAGE1_TRAIN/storage/pretrained_models/Llama-3.2-1B
whisper_encoder_fpath: /proj/MR_dataset/mtk53711/TASTE-SpokenLM/STAGE1_TRAIN/storage/pretrained_models/distil-large-v3

# model params
# for all class/function included in this repo, we use !<name> or !<new> for intialization, so that user may find all corresponding class/function according to one single yaml.
# for system/third_party class/function, we do not require this.
llm: !new:cosyvoice.llm.audio_llm.TransformerJointLM
  load_partial_list: [
      "text_encoder",
      "llm",
      "llm_decoder",
      "audio_tokenizer", # add this would probably simulate fully loaded
      "audio_token_encoder",
      "audio_embed_affine_layer",
    ]
  freeze_partial_list: [
      "audio_tokenizer.audio_joint_encoder_segmenter.audio_encoder", # Freeze encoder
      "audio_tokenizer.audio_joint_encoder_segmenter.audio_segmenter.decoder.layers", # Freeze all decoder layers
      # Removed decoder.embed from freeze list to allow training embeddings
    ]
  freeze_partial_during_init: True
  text_encoder_input_size: !ref <text_encoder_input_size>
  llm_input_size: !ref <llm_input_size>
  llm_output_size: !ref <llm_output_size>
  text_token_size: 128256
  speech_token_size: 4096
  length_normalized_loss: True
  lsm_weight: 0
  spk_embed_dim: !ref <spk_embed_dim>
  # for audio branch
  audio_embed_dim: !ref <audio_embed_dim>
  audio_token_encoder_input_size: !ref <audio_token_encoder_input_size>
  is_word_level: !ref <is_word_level>
  fuse_encoded_audio_text_type: "weighted_sum"
  fuse_encoded_audio_text_kwargs:
    normalize: True
    use_trainable_weight: True
    use_layer_norm: False
    weight_init_type: "balance"
    # audio_first: True # audio first seems
  audio_tokenizer:
    !new:cosyvoice.audio.audio_tokenizer.JointEncoderSegmenterAudioTokenizer
    audio_joint_encoder_segmenter:
      !new:cosyvoice.audio.audio_joint_encoder_segmenter.WhisperAudioJointEncoderSegmenter
      model_name_or_path: !ref <whisper_encoder_fpath>
      # attn_implementation: flash_attention_2
      attn_implementation: eager
      # dtype: bfloat16
      dtype: float32
      use_custom: True
      forward_type: asr_attn_pooling
      make_v_proj_identity: True
      is_word_level: !ref <is_word_level>
      skip_prefix_idx: 1 # skip bos (0), task_id (1), lang_id (2), no-timestamp (3), start from idx=4
      vocab_size: 128256 # Set vocab size to match text_token_size
      padding_idx: 128004
      # skip_postfix_idx: -1 # skip eos (-1), currently unsupported
    audio_quantizer:
      !new:cosyvoice.audio.audio_quantizer.StraightThroughAudioQuantizer # audio token encoder is parallel with the text_encoder below


  audio_token_encoder: !new:cosyvoice.transformer.encoder.ConformerEncoder
    input_size: !ref <audio_token_encoder_input_size>
    output_size: 1024
    attention_heads: 8
    linear_units: 2048
    num_blocks: 2
    dropout_rate: 0.1
    positional_dropout_rate: 0.1
    attention_dropout_rate: 0
    normalize_before: True
    input_layer: "linear"
    pos_enc_layer_type: "rel_pos_espnet"
    selfattention_layer_type: "rel_selfattn"
    use_cnn_module: False
    macaron_style: False
    use_dynamic_chunk: False
    use_dynamic_left_chunk: False
    static_chunk_size: 1
  # end of audio branch
  text_encoder: !new:cosyvoice.transformer.encoder.ConformerEncoder
    input_size: !ref <text_encoder_input_size>
    output_size: 1024
    attention_heads: 8
    linear_units: 2048
    num_blocks: 3
    dropout_rate: 0.1
    positional_dropout_rate: 0.1
    attention_dropout_rate: 0
    normalize_before: True
    input_layer: "linear"
    pos_enc_layer_type: "rel_pos_espnet"
    selfattention_layer_type: "rel_selfattn"
    use_cnn_module: False
    macaron_style: False
    use_dynamic_chunk: False
    use_dynamic_left_chunk: False
    static_chunk_size: 1
  llm: !new:cosyvoice.transformer.encoder.TransformerEncoder
    input_size: !ref <llm_input_size>
    output_size: !ref <llm_output_size>
    attention_heads: 8
    linear_units: 2048
    num_blocks: 7
    dropout_rate: 0.1
    positional_dropout_rate: 0.1
    attention_dropout_rate: 0
    input_layer: "linear_legacy"
    pos_enc_layer_type: "rel_pos_espnet"
    selfattention_layer_type: "rel_selfattn"
    static_chunk_size: 1

flow: !new:cosyvoice.flow.flow.MaskedDiffWithXvec
  input_size: 512
  output_size: 80
  spk_embed_dim: !ref <spk_embed_dim>
  output_type: "mel"
  vocab_size: 4096
  input_frame_rate: 50
  only_mask_loss: True
  encoder: !new:cosyvoice.transformer.encoder.ConformerEncoder
    output_size: 512
    attention_heads: 8
    linear_units: 2048
    num_blocks: 6
    dropout_rate: 0.1
    positional_dropout_rate: 0.1
    attention_dropout_rate: 0.1
    normalize_before: True
    input_layer: "linear"
    pos_enc_layer_type: "rel_pos_espnet"
    selfattention_layer_type: "rel_selfattn"
    input_size: 512
    use_cnn_module: False
    macaron_style: False
  length_regulator: !new:cosyvoice.flow.length_regulator.InterpolateRegulator
    channels: 80
    sampling_ratios: [1, 1, 1, 1]
  decoder: !new:cosyvoice.flow.flow_matching.ConditionalCFM
    in_channels: 240
    n_spks: 1
    spk_emb_dim: 80
    cfm_params: !new:omegaconf.DictConfig
      content:
        sigma_min: 1e-06
        solver: "euler"
        t_scheduler: "cosine"
        training_cfg_rate: 0.2
        inference_cfg_rate: 0.7
        reg_loss_type: "l1"
    estimator: !new:cosyvoice.flow.decoder.ConditionalDecoder
      in_channels: 320
      out_channels: 80
      channels: [256, 256]
      dropout: 0
      attention_head_dim: 64
      n_blocks: 4
      num_mid_blocks: 12
      num_heads: 8
      act_fn: "gelu"

hift: !new:cosyvoice.hifigan.generator.HiFTGenerator
  in_channels: 80
  base_channels: 512
  nb_harmonics: 8
  sampling_rate: !ref <sample_rate>
  nsf_alpha: 0.1
  nsf_sigma: 0.003
  nsf_voiced_threshold: 10
  upsample_rates: [8, 8]
  upsample_kernel_sizes: [16, 16]
  istft_params:
    n_fft: 16
    hop_len: 4
  resblock_kernel_sizes: [3, 7, 11]
  resblock_dilation_sizes: [[1, 3, 5], [1, 3, 5], [1, 3, 5]]
  source_resblock_kernel_sizes: [7, 11]
  source_resblock_dilation_sizes: [[1, 3, 5], [1, 3, 5]]
  lrelu_slope: 0.1
  audio_limit: 0.99
  f0_predictor: !new:cosyvoice.hifigan.f0_predictor.ConvRNNF0Predictor
    num_class: 1
    in_channels: 80
    cond_channels: 512

# processor functions
parquet_opener: !name:cosyvoice.dataset.processor.parquet_opener
get_tokenizer: !name:whisper.tokenizer.get_tokenizer
  multilingual: True
  num_languages: 100
  language: "en"
  task: "transcribe"
allowed_special: "all"
tokenize: !name:cosyvoice.dataset.processor.tokenize_by_words
  get_tokenizer: !ref <get_tokenizer>
  allowed_special: !ref <allowed_special>
  use_asr_text: True
tokenize_whisper: !name:cosyvoice.dataset.processor.tokenize_whisper
  tokenizer_name_or_fpath: !ref <whisper_tokenizer_fpath>
  task: "transcribe"
  language: "en"
  no_timestamps: True
  add_bos: True
  add_eos: False
  use_asr_text: True
  overwrite_text_token: False
  use_wrapped: True
filter: !name:cosyvoice.dataset.processor.filter
  max_length: 40960
  min_length: 0
  token_max_length: 200
  token_min_length: 1
resample: !name:cosyvoice.dataset.processor.resample
  resample_rate: !ref <sample_rate>
feat_extractor: !name:matcha.utils.audio.mel_spectrogram
  n_fft: 1024
  num_mels: 80
  sampling_rate: !ref <sample_rate>
  hop_size: 256
  win_size: 1024
  fmin: 0
  fmax: 8000
  center: False
audio_extractor: !new:funasr.frontends.whisper_frontend.WhisperFrontend
  whisper_model: large-v3
  do_pad_trim: True
  permute: True
extract_audio:
  !name:cosyvoice.dataset.processor.extract_audio # get_audio_extractor: !ref <get_audio_extractor>
  audio_extractor: !ref <audio_extractor>
  target_sample_rate: 16_000
  # Maybe we should add prepending sensevoice tokens here.
compute_fbank: !name:cosyvoice.dataset.processor.compute_fbank
  feat_extractor: !ref <feat_extractor>
parse_embedding: !name:cosyvoice.dataset.processor.parse_embedding
  normalize: True
shuffle: !name:cosyvoice.dataset.processor.shuffle
  shuffle_size: 1000
sort: !name:cosyvoice.dataset.processor.sort
  sort_size: 500 # sort_size should be less than shuffle_size
batch: !name:cosyvoice.dataset.processor.batch
  batch_size: 4
  batch_type: "dynamic"
  # max_frames_in_batch: 16000 # 4800
  max_frames_in_batch: 2000 # for testing
padding: !name:cosyvoice.dataset.processor.padding
  use_spk_embedding: False # change to True during sft
  has_audio_branch: True # add audio branch related padding
  use_asr_text: False # avoid directly using asr text and alignments for compatibility
  use_auto_audio_len: False
  requires_words_index: !ref <is_word_level> # for word-level audio token

# dataset processor pipeline
data_pipeline: [
    !ref <parquet_opener>,
    !ref <tokenize>, # using tokenize_whisper can skip this
    !ref <tokenize_whisper>,
    !ref <filter>,
    !ref <extract_audio>, # added for audio branch, NOTE: should be in front of resample and compute fbank!!
    !ref <resample>,
    !ref <compute_fbank>,
    !ref <parse_embedding>,
    !ref <shuffle>,
    !ref <sort>,
    !ref <batch>,
    !ref <padding>,
  ]

# train conf
train_conf:
  optim: adam
  optim_conf:
    lr: 0.0016 # change to 0.001 if you want to train flow from scratch
  scheduler: warmuplr
  scheduler_conf:
    # warmup_steps: 25000
    warmup_steps: 20000
  # max_epoch: 200
  max_epoch: 3
  grad_clip: 5
  accum_grad: 2 # 6
  log_interval: 100
  save_per_step: 10000
  # save_per_step: 50 # for testing
